# Redirect all HTTP to HTTPS
server {
    listen 80 default_server;
    server_name example.com;
    return 301 https://$host$request_uri;
}

# HTTPS + mTLS
server {
    listen 443 ssl default_server;
    http2 on;
    server_name example.com;

    # Hide Nginx version
    server_tokens off;

    # Strong ECDH curve + DH params for forward secrecy
    ssl_ecdh_curve            X25519:secp521r1:secp384r1;
    ssl_dhparam               /etc/nginx/ssl/ssl-dhparams.pem;    

    # LE certs (mounted)
    ssl_certificate     /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;

    # mTLS CA bundle
    ssl_client_certificate /etc/nginx/client_certs/ca.crt;
    ssl_verify_client      on;

    ssl_protocols   TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;    
    ssl_ciphers     HIGH:!aNULL:!MD5;
    ssl_session_cache         shared:SSL:20m;
    ssl_session_timeout       1h;
    ssl_session_tickets       off;

    add_header      Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Frame-Options           "SAMEORIGIN" always;
    add_header X-Content-Type-Options    "nosniff" always;
    add_header Referrer-Policy           "no-referrer-when-downgrade" always;
    add_header Permissions-Policy        "geolocation=(), microphone=()" always;

    client_max_body_size 1m;

    # Serve a static home page mapped from ./nginx/html/
    root /usr/share/nginx/html;
    index index.html;

    # The OpenVPN client site aggressively wants to be at root
    # The text find and replace subfilters modify the javascript
    # and html so that the site redirects to the /ovpnclient/ location
    # If a feature breaks review web developer tools and determine what
    # String needs to be replaced

    location /ovpnclient/ {
        proxy_pass         https://openvpn-as:943/;
        proxy_http_version 1.1;
        proxy_set_header   Host              $host:443;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;

        # 1) Ask upstream for uncompressed data & force Nginx to gunzip it
        proxy_set_header   Accept-Encoding "";
        gunzip             on;
        proxy_hide_header  Content-Encoding;
        proxy_hide_header  Content-Length;
        # 3) Rewrite every "/api" and "/static/" inside JS/HTML
        sub_filter_types text/html application/javascript text/javascript application/x-javascript;
        sub_filter         /api      /ovpnclient/api;
        sub_filter         /admin    /ovpnadmin/;
        sub_filter         (e?.admin_port)    ();
        sub_filter         '/static/'  '/ovpnclient/static/';
        sub_filter_once    off;
    }

    # The OpenVPN admin portal works just fine with a simple proxy redirect
    # No rewriting necessary

    location /ovpnadmin/ {
        proxy_pass         https://openvpn-as:943/admin/;
        proxy_http_version 1.1;
        proxy_set_header   Host              $host:443;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
        proxy_redirect  ~^https?://[^/]+/admin(/.*)?$  /ovpnadmin$1;

    }


    location / {
        try_files $uri $uri/ =404;
    }
}